<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">


    <!--Defoult login to test-->
    <!--    <http>
            <intercept-url pattern="/**" access="hasAnyAuthority('USER')" />
            <intercept-url pattern="/javax.faces.resource/**" access="permitAll" />
        <intercept-url pattern="/resources/**" access="permitAll" />
            <intercept-url pattern="/accessDenied.jsf" access="permitAll" />
            <form-login />
            <logout />
            <access-denied-handler error-page="/accessDenied.jsf"/>
            <csrf disabled="true"></csrf>
        </http>-->

    <!--Login form for production-->
    <http>
        <intercept-url pattern="/login.jsf*" access="permitAll"/>
        <intercept-url pattern="/register.jsf*" access="permitAll"/>
        <intercept-url pattern="/javax.faces.resource/**" access="permitAll"/>
        <intercept-url pattern="/resources/**" access="permitAll"/>
        <intercept-url pattern="/accessDenied.jsf" access="permitAll"/>
        <intercept-url pattern="/**" access="hasAnyAuthority('GESTOR')"/>

        <form-login login-processing-url="/login.jsf"
                    default-target-url="/index.jsf"
                    login-page="/login.jsf"
                    authentication-failure-url="/login.jsf"/>
        <!--<form-login />-->

        <logout logout-url="/logout" delete-cookies="JSESSIONID"
                logout-success-url="/index.jsf"/>

        <access-denied-handler error-page="/accessDenied.jsf"/>

        <csrf disabled="true"></csrf>
    </http>

    <!--In memori auth-->
    <!--    <authentication-manager>
            <authentication-provider>
                <user-service>
                    <user name="admin" password="123" authorities="ROLE_USER, ROLE_ADMIN" />
                    <user name="user" password="123" authorities="ROLE_USER" />
                </user-service>
            </authentication-provider>
        </authentication-manager>-->

    <!--Default S. Security auth manager-->
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="bcryptEncoder"/>
            <jdbc-user-service data-source-ref="securityDataSource"/>
        </authentication-provider>
    </authentication-manager>

    <!-- Select users and user_roles from database -->
    <!--    <authentication-manager>
            <authentication-provider>
                <jdbc-user-service data-source-ref="securityDataSource"
                                       users-by-username-query=
                "select username,password, enabled from users where username=?"
                                       authorities-by-username-query=
                "select username, authority from authorities where username =?" />
            </authentication-provider>
        </authentication-manager>-->


    <!--Password encoder-->
    <beans:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>


    <!--	<global-method-security pre-post-annotations="enabled"/>

        <http auto-config="true" use-expressions="true">
            <intercept-url pattern="/javax.faces.resource/**" access="permitAll" />
            <intercept-url pattern="/resources/**" access="permitAll" />
            <intercept-url pattern="/signin" access="permitAll" />
            <intercept-url pattern="/signup" access="permitAll" />
            <intercept-url pattern="/welcome" access="hasAnyAuthority('ROLE_ASESOR', 'ROLE_DIRECTIVO' , 'ROLE_ADMINISTRADOR')"/>
            <intercept-url pattern="/forgotPassword" access="permitAll" />
            <intercept-url pattern="/recoverPassword" access="permitAll" />
            <intercept-url pattern="/resetPassword" access="permitAll" />
            <intercept-url pattern="/resetedPassword" access="permitAll" />
            <intercept-url pattern="/resetedPasswordError" access="permitAll" />
            <intercept-url pattern="/aboutUs" access="permitAll" />
            <intercept-url pattern="/contactUs" access="permitAll" />
            <intercept-url pattern="/pages/error/**" access="permitAll" />
            <intercept-url pattern="/search-candidate" access="hasAnyAuthority('SECRETARIO', 'ROLE_ASESOR')" />
            <intercept-url pattern="/report-**" access="hasAnyAuthority('ROLE_DIRECTIVO', 'ROLE_ASESOR')" />
            <intercept-url pattern="/manage-**" access="hasAnyAuthority('ROLE_ASESOR')"/>
            <intercept-url pattern="/codifier-**" access="hasAnyAuthority('ROLE_ASESOR')"/>
            <intercept-url pattern="/administrate-users" access="hasAnyAuthority('ROLE_ADMINISTRADOR', 'ROLE_ASESOR')"/>
             <intercept-url pattern="/codifier-candidate-stage" access="permitAll" />
             <intercept-url pattern="/codifier-candidate-stage-add" access="permitAll" />






             hasAuthority('ADMINISTRATOR')

             <port-mappings>
                <port-mapping http="8082" https="443"/>
            </port-mappings>

            <form-login login-processing-url="/login"
                default-target-url="/welcome" login-page="/signin"
                authentication-failure-url="/signin"/>
            <logout logout-url="/logout" delete-cookies="JSESSIONID"
                logout-success-url="/welcome" />

            <access-denied-handler error-page="/error-access-denied"/>

            <session-management>
                <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
            </session-management>
            <csrf disabled="true"></csrf>
        </http>

        <authentication-manager>
            <authentication-provider user-service-ref="authenticationService">
                 <password-encoder ref="bcryptEncoder" />
            </authentication-provider>
        </authentication-manager>

        <beans:bean id="authenticationService" class="cu.edu.mes.sigenu.dess.security.spring.AuthenticationService" />

        <beans:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

        <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" />
        -->

</beans:beans>
